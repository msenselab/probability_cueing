geom_bar(stat="identity", width=0.6, color="black", fill="forestgreen") + theme_bw() +
geom_errorbar(aes(ymin=merr-se_err, ymax=merr+se_err), width=0.2) + coord_cartesian(ylim=c(0,0.06))
# t-test to check for significant difference between RTs with target in high an low prob locations
target_pos_err_ttest <- t.test(filter(s_err_tpos_data, tar_cond=="Low")$err,
filter(s_err_tpos_data, tar_cond=="High")$err, paired=TRUE)
# ---- target_pos_only_pdistpos ----
# This section is for figures and significance tests related to the effect of target position on
# distractor absent trials: high probability or low probability location
# In this section this analysis is performed considering only those trials where the target on trial n
# is in the same position as the distractor on trial n-1
raw_pdistpos <- group_by(raw, sub, blkNo) %>%
mutate(pdist_pos = lag(dist_pos), tposmatch = tar_pos==pdist_pos) %>%
filter(tposmatch, dist_pos==0)
# Check number of trials that this analysis is based on
n_trials_pdist_pos <- filter(raw_pdistpos, correct, !outlier) %>%
group_by(sub, tar_cond) %>% summarize(ntrials=n())
ggplot(n_trials_pdist_pos, aes(x=sub, y=ntrials, fill=tar_cond)) +
geom_bar(stat="identity", width=0.6, color="black", position="dodge") + theme_bw()
# Calculate mean RT for target in high and low probability locations with distractor absent
# compare to Figure 3 (left half) in Wang & Theeuwes,
s_rt_tpos_pdp_data <- filter(raw_pdistpos, !outlier, correct, dist_pos==0) %>% group_by(tar_cond, sub) %>%
summarize(rt=mean(rt)) %>% arrange(sub, tar_cond)
ss_rt_tpos_pdp_data <- summarize(s_rt_tpos_pdp_data, mRT=mean(rt), seRT=sd(rt)/sqrt(N-1))
ggplot(ss_rt_tpos_pdp_data, aes(x=tar_cond, y=mRT)) +
geom_bar(stat="identity", width=0.6, color="black", fill="forestgreen") + theme_bw() +
geom_errorbar(aes(ymin=mRT-seRT, ymax=mRT+seRT), width=0.2) + coord_cartesian(ylim=c(0.8,1.2)) +
xlab("Target location") + ylab("Response time (ms)") +
geom_text(mapping = aes(label = 1000*round(mRT,3)), size = 3, colour = 'black', vjust =8, hjust = 0.5, position = position_dodge(0.6)) + theme(panel.grid =element_blank())
# t-test to check for significant difference between RTs with target in high an low prob locations
target_pos_rt_pdp_ttest <- t.test(filter(s_rt_tpos_pdp_data, tar_cond=="High")$rt,
filter(s_rt_tpos_pdp_data, tar_cond=="Low")$rt, paired=TRUE)
str(target_pos_rt_pdp_ttest)
# Calculate mean error rate for target in high and low probability locations with distractor absent
# compare to Figure 3 (right half) in Wang & Theeuwes,
s_err_tpos_pdp_data <- filter(raw_pdistpos, !outlier, dist_pos==0) %>% group_by(tar_cond, sub) %>%
summarize(err=1-mean(correct)) %>% arrange(sub, tar_cond)
ss_err_tpos_pdp_data <- summarize(s_err_tpos_pdp_data, merr=mean(err), se_err=sd(err)/sqrt(N-1))
ggplot(ss_err_tpos_pdp_data, aes(x=tar_cond, y=merr)) +
geom_bar(stat="identity", width=0.6, color="black", fill="forestgreen") + theme_bw() +
geom_errorbar(aes(ymin=merr-se_err, ymax=merr+se_err), width=0.2) + coord_cartesian(ylim=c(0,0.06))
# t-test to check for significant difference between RTs with target in high an low prob locations
target_pos_err_pdp_ttest <- t.test(filter(s_err_tpos_pdp_data, tar_cond=="Low")$err,
filter(s_err_tpos_pdp_data, tar_cond=="High")$err, paired=TRUE)
# ---- target_pos_remove_pdistpos ----
# This section is for figures and significance tests related to the effect of target position on
# distractor absent trials: high probability or low probability location
# In this section this analysis is performed considering only those trials where the target on trial n
# is NOT in the same position as the distractor on trial n-1
raw_npdistpos <- group_by(raw, sub, blkNo) %>%
mutate(pdist_pos = lag(dist_pos), tposmatch = tar_pos==pdist_pos) %>%
filter(!tposmatch, dist_pos==0)
# Check number of trials that this analysis is based on
n_trials_npdist_pos <- filter(raw_npdistpos, correct, !outlier) %>%
group_by(sub, tar_cond) %>% summarize(ntrials=n())
ggplot(n_trials_npdist_pos, aes(x=sub, y=ntrials, fill=tar_cond)) +
geom_bar(stat="identity", width=0.6, color="black", position="dodge") + theme_bw()
# Calculate mean RT for target in high and low probability locations with distractor absent
# compare to Figure 3 (left half) in Wang & Theeuwes,
s_rt_tpos_npdp_data <- filter(raw_npdistpos, !outlier, correct, dist_pos==0) %>% group_by(tar_cond, sub) %>%
summarize(rt=mean(rt)) %>% arrange(sub, tar_cond)
ss_rt_tpos_npdp_data <- summarize(s_rt_tpos_npdp_data, mRT=mean(rt), seRT=sd(rt)/sqrt(N-1))
ggplot(ss_rt_tpos_npdp_data, aes(x=tar_cond, y=mRT)) +
geom_bar(stat="identity", width=0.6, color="black", fill="forestgreen") + theme_bw() +
geom_errorbar(aes(ymin=mRT-seRT, ymax=mRT+seRT), width=0.2) + coord_cartesian(ylim=c(0.7,1.2))+
xlab("Target location") + ylab("Response time (ms)") +
geom_text(mapping = aes(label = 1000*round(mRT,3)), size = 3, colour = 'black', vjust =8, hjust = 0.5, position = position_dodge(0.6)) + theme(panel.grid =element_blank())
# t-test to check for significant difference between RTs with target in high an low prob locations
target_pos_rt_npdp_ttest <- t.test(filter(s_rt_tpos_npdp_data, tar_cond=="High")$rt,
filter(s_rt_tpos_npdp_data, tar_cond=="Low")$rt, paired=TRUE)
str(target_pos_rt_npdp_ttest )
# Calculate mean error rate for target in high and low probability locations with distractor absent
# compare to Figure 3 (right half) in Wang & Theeuwes,
s_err_tpos_npdp_data <- filter(raw_npdistpos, !outlier, dist_pos==0) %>% group_by(tar_cond, sub) %>%
summarize(err=1-mean(correct)) %>% arrange(sub, tar_cond)
ss_err_tpos_npdp_data <- summarize(s_err_tpos_npdp_data, merr=mean(err), se_err=sd(err)/sqrt(N-1))
ggplot(ss_err_tpos_npdp_data, aes(x=tar_cond, y=merr)) +
geom_bar(stat="identity", width=0.6, color="black", fill="forestgreen") + theme_bw() +
geom_errorbar(aes(ymin=merr-se_err, ymax=merr+se_err), width=0.2) + coord_cartesian(ylim=c(0,0.06))
# t-test to check for significant difference between RTs with target in high an low prob locations
target_pos_err_npdp_ttest <- t.test(filter(s_err_tpos_npdp_data, tar_cond=="Low")$err,
filter(s_err_tpos_npdp_data, tar_cond=="High")$err, paired=TRUE)
# ---- target_pos_no_pdist ----
# This section is for figures and significance tests related to the effect of target position on
# distractor absent trials: high probability or low probability location
# In this section this analysis is performed considering only those trials where there was no distactor
# on the previous trial
raw_npdist <- group_by(raw, sub, blkNo) %>%
mutate(pdist_pos = lag(dist_pos)) %>% filter(pdist_pos==0, dist_pos==0)
# Check number of trials that this analysis is based on
n_trials_npdist <- filter(raw_npdist, correct, !outlier) %>%
group_by(sub, tar_cond) %>% summarize(ntrials=n())
ggplot(n_trials_npdist, aes(x=sub, y=ntrials, fill=tar_cond)) +
geom_bar(stat="identity", width=0.6, color="black", position="dodge") + theme_bw()
# Calculate mean RT for target in high and low probability locations with distractor absent
# compare to Figure 3 (left half) in Wang & Theeuwes,
s_rt_tpos_npd_data <- filter(raw_npdist, !outlier, correct, dist_pos==0) %>% group_by(tar_cond, sub) %>%
summarize(rt=mean(rt)) %>% arrange(sub, tar_cond)
ss_rt_tpos_npd_data <- summarize(s_rt_tpos_npd_data, mRT=mean(rt), seRT=sd(rt)/sqrt(N-1))
ggplot(ss_rt_tpos_npd_data, aes(x=tar_cond, y=mRT)) +
geom_bar(stat="identity", width=0.6, color="black", fill="forestgreen") + theme_bw() +
geom_errorbar(aes(ymin=mRT-seRT, ymax=mRT+seRT), width=0.2) + coord_cartesian(ylim=c(0.7,1.2))+
xlab("Target location") + ylab("Response time (ms)") +
geom_text(mapping = aes(label = 1000*round(mRT,3)), size = 3, colour = 'black', vjust =8, hjust = 0.5, position = position_dodge(0.6)) + theme(panel.grid =element_blank())
# t-test to check for significant difference between RTs with target in high an low prob locations
target_pos_rt_npd_ttest <- t.test(filter(s_rt_tpos_npd_data, tar_cond=="High")$rt,
filter(s_rt_tpos_npd_data, tar_cond=="Low")$rt, paired=TRUE)
str(target_pos_rt_npd_ttest)
# Calculate mean error rate for target in high and low probability locations with distractor absent
# compare to Figure 3 (right half) in Wang & Theeuwes,
s_err_tpos_npd_data <- filter(raw_npdist, !outlier, dist_pos==0) %>% group_by(tar_cond, sub) %>%
summarize(err=1-mean(correct)) %>% arrange(sub, tar_cond)
ss_err_tpos_npd_data <- summarize(s_err_tpos_npd_data, merr=mean(err), se_err=sd(err)/sqrt(N-1))
ggplot(ss_err_tpos_npd_data, aes(x=tar_cond, y=merr)) +
geom_bar(stat="identity", width=0.6, color="black", fill="forestgreen") + theme_bw() +
geom_errorbar(aes(ymin=merr-se_err, ymax=merr+se_err), width=0.2) + coord_cartesian(ylim=c(0,0.06))
# t-test to check for significant difference between RTs with target in high an low prob locations
target_pos_err_npd_ttest <- t.test(filter(s_err_tpos_npd_data, tar_cond=="Low")$err,
filter(s_err_tpos_npd_data, tar_cond=="High")$err, paired=TRUE)
# ---- target_pos_di_pdist ----
# This section is for figures and significance tests related to the effect of target position on
# distractor absent trials: high probability or low probability location
# In this section this analysis is performed considering only those trials where there was different distactor
# on the previous trial
raw_dipdist <- group_by(raw, sub, blkNo) %>%
mutate(pdist_pos = lag(dist_pos), tposmatch = tar_pos==pdist_pos) %>%
filter(!tposmatch, !pdist_pos==0, dist_pos==0)
# Check number of trials that this analysis is based on
n_trials_dipdist <- filter(raw_dipdist, correct, !outlier) %>%
group_by(sub, tar_cond) %>% summarize(ntrials=n())
ggplot(n_trials_npdist, aes(x=sub, y=ntrials, fill=tar_cond)) +
geom_bar(stat="identity", width=0.6, color="black", position="dodge") + theme_bw()
# Calculate mean RT for target in high and low probability locations with distractor absent
# compare to Figure 3 (left half) in Wang & Theeuwes,
s_rt_tpos_dipd_data <- filter(raw_dipdist, !outlier, correct, dist_pos==0) %>% group_by(tar_cond, sub) %>%
summarize(rt=mean(rt)) %>% arrange(sub, tar_cond)
ss_rt_tpos_dipd_data <- summarize(s_rt_tpos_dipd_data, mRT=mean(rt), seRT=sd(rt)/sqrt(N-1))
ggplot(ss_rt_tpos_dipd_data, aes(x=tar_cond, y=mRT)) +
geom_bar(stat="identity", width=0.6, color="black", fill="forestgreen") + theme_bw() +
geom_errorbar(aes(ymin=mRT-seRT, ymax=mRT+seRT), width=0.2) + coord_cartesian(ylim=c(0.7,1.2))+
xlab("Target location") + ylab("Response time (ms)") +
geom_text(mapping = aes(label = 1000*round(mRT,3)), size = 3, colour = 'black', vjust =8, hjust = 0.5, position = position_dodge(0.6)) + theme(panel.grid =element_blank())
# t-test to check for significant difference between RTs with target in high an low prob locations
target_pos_rt_dipd_ttest <- t.test(filter(s_rt_tpos_dipd_data, tar_cond=="High")$rt,
filter(s_rt_tpos_dipd_data, tar_cond=="Low")$rt, paired=TRUE)
str(target_pos_rt_dipd_ttest )
# Calculate mean error rate for target in high and low probability locations with distractor absent
# compare to Figure 3 (right half) in Wang & Theeuwes,
s_err_tpos_dipd_data <- filter(raw_dipdist, !outlier, dist_pos==0) %>% group_by(tar_cond, sub) %>%
summarize(err=1-mean(correct)) %>% arrange(sub, tar_cond)
ss_err_tpos_dipd_data <- summarize(s_err_tpos_dipd_data, merr=mean(err), se_err=sd(err)/sqrt(N-1))
ggplot(ss_err_tpos_dipd_data, aes(x=tar_cond, y=merr)) +
geom_bar(stat="identity", width=0.6, color="black", fill="forestgreen") + theme_bw() +
geom_errorbar(aes(ymin=merr-se_err, ymax=merr+se_err), width=0.2) + coord_cartesian(ylim=c(0,0.06))
# t-test to check for significant difference between RTs with target in high an low prob locations
target_pos_err_dipd_ttest <- t.test(filter(s_err_tpos_dipd_data, tar_cond=="Low")$err,
filter(s_err_tpos_dipd_data, tar_cond=="High")$err, paired=TRUE)
str(head(target_pos_rt_dipd_ttest))
tar_dist_distance_rt_anova <- ezANOVA(s_tar_dist_distance_data, dv=rt, wid=sub,
within=.(tar_dist_distance))
str(head(target_pos_rt_ttest))
str(head(target_pos_rt_pdp_ttest))
str(head(target_pos_rt_npdp_ttest))
str(head(target_pos_rt_npd_ttest))
str(head(target_pos_rt_dipd_ttest))
# ---- exclude inter-trial repetition trials ----
# This section is for excluding for inter-trial repetition trials:Dn-1–Tn, Tn-1–Dn, Dn-1–Dn
raw_inter <- group_by(raw, sub, blkNo) %>%
mutate(pdist_pos = lag(dist_pos), ptar_pos = lag(tar_pos), tposmatch = tar_pos==pdist_pos,
pposmatch = dist_pos==ptar_pos, sposmatch = dist_pos==pdist_pos) %>%
filter(tposmatch | pposmatch  | sposmatch)
n_trials_raw_exlude <- raw_inter %>% group_by(sub,tar_cond) %>% summarize(ntrials=n())
ggplot(n_trials_raw_exlude, aes(x=sub, y=ntrials, fill=tar_cond)) +
geom_bar(stat="identity", width=0.6, color="black", position="dodge") + theme_bw()
# exlude the trials and check the rest of trials
raw_exclude <- group_by(raw, sub, blkNo) %>%
mutate(pdist_pos = lag(dist_pos), ptar_pos = lag(tar_pos), tposmatch = tar_pos==pdist_pos,
pposmatch = dist_pos==ptar_pos, sposmatch = dist_pos==pdist_pos) %>%
filter(!(tposmatch | pposmatch  | sposmatch))
n_trials_raw_rest <- filter(raw_exclude, correct, !outlier) %>%
group_by(sub, tar_cond) %>% summarize(ntrials=n())
ggplot(n_trials_raw_rest, aes(x=sub, y=ntrials, fill=tar_cond)) +
geom_bar(stat="identity", width=0.6, color="black", position="dodge") + theme_bw()
# ---- distractor_target_distance ----
# This section examines the effect of target to distractor distance. Obviously this includes only distractor present trials.
# calculate the distance of target and distractor and compare with two target conditions
distance <- c(1, 2, 3, 4, 3, 2, 1)
s_tar_dist_distance_data <- mutate(raw, tar_dist_distance = distance[abs(tar_pos - dist_pos)]) %>%
group_by(tar_dist_distance, tar_cond, sub) %>% filter(correct, !outlier, dist_pos!=0) %>% summarize(rt=mean(rt))
str(head(s_tar_dist_distance_data))
ss_tar_dist_distance_data <- summarize(s_tar_dist_distance_data, mRT=mean(rt), seRT=sd(rt)/sqrt(N-1))
ggplot(ss_tar_dist_distance_data, aes(x=tar_dist_distance, y=mRT, color=tar_cond)) +
geom_point(stat="identity") + theme_bw() + coord_cartesian(yli=c(0.7,1.3)) +
geom_smooth()+  geom_text(mapping = aes(label = 1000*round(mRT,3)), size = 3, colour = 'black', vjust = 2, hjust = 0.5, position = position_dodge(0.6)) + theme(panel.grid =element_blank()) +
labs(x="Distance between target and distractor", y='mean RT (s)')
tar_dist_distance_rt_anova <- ezANOVA(s_tar_dist_distance_data, dv=rt, wid=sub,
within=.(tar_dist_distance, tar_cond))
str(tar_dist_distance_rt_anova)
# exlude the distance trials and check the rest of trials
distance <- c(1, 2, 3, 4, 3, 2, 1)
raw_exclude$tar_dist_distance <- distance[abs(raw_exclude$tar_pos - raw_exclude$dist_pos)]
ntrials_distance <- raw_exclude %>%  group_by(tar_dist_distance, tar_cond) %>% summarise(ntrials=n()) %>%
arrange(tar_dist_distance, tar_cond)
raw_exclude2 <- filter(raw_exclude, !(tar_dist_distance == 4 & !dist_pos==0))
n_trials_raw_rest <- filter(raw_exclude2, correct, !outlier) %>%
group_by(sub, tar_cond) %>% summarize(ntrials=n())
ggplot(n_trials_raw_rest, aes(x=sub, y=ntrials, fill=tar_cond)) +
geom_bar(stat="identity", width=0.6, color="black", position="dodge") + theme_bw()
# ---- tar_low_pdist_low_vs_high ----
# Check whether for distractor absent trials with target in low probability region, there is a difference
# in RT between the case where previous distractor is in high prob. region and in low prob. region, assuming
# distractor is not on target position
s_rt_pdist_tlow <- group_by(raw, sub, blkNo) %>%
mutate(pdist_pos = lag(dist_pos), pdist_cond = lag(dist_cond), tposmatch = tar_pos==pdist_pos) %>%
ungroup() %>% filter(!tposmatch, dist_pos==0, tar_cond=="Low", pdist_pos!=0,
!is.na(pdist_cond), correct, !outlier) %>% group_by(pdist_cond, sub) %>%
summarize(rt=mean(rt))
ss_rt_pdist_tlow <- summarize(s_rt_pdist_tlow, mrt=mean(rt), se_rt=sd(rt)/sqrt(N-1))
rt_pdist_tlow_ttest <- t.test(filter(s_rt_pdist_tlow, pdist_cond=="Low")$rt,
filter(s_rt_pdist_tlow, pdist_cond=="High")$rt, paired=TRUE)
# ---- target_pos in all conditions----
s_rt_tar_pos_all2 <- filter(raw_exclude2, !outlier, correct) %>% group_by(dist_cond, tar_cond, sub) %>%
summarize(rt=mean(rt)) %>% arrange(dist_cond, tar_cond, sub)
str(s_rt_tar_pos_all2)
ss_rt_tar_pos_all2 <- summarize(s_rt_tar_pos_all2,mRT=mean(rt), seRT=sd(rt)/sqrt(N-1))
str(ss_rt_tar_pos_all2)
ggplot(ss_rt_tar_pos_all2, aes(x=dist_cond, y=mRT, fill=tar_cond)) +
geom_bar(stat="identity", width=0.6, color="black", position = "dodge") + theme_bw() +
geom_errorbar(aes(ymin=mRT-seRT, ymax=mRT+seRT), width=0.2, position=position_dodge(0.6)) + coord_cartesian(ylim=c(0.7,1.3))+
xlab("Distractor condition") + ylab("Response time (ms)") +
geom_text(mapping = aes(label = 1000*round(mRT,3)), size = 3, colour = 'black', vjust = 8, hjust = 0.5, position = position_dodge(0.6)) + theme(panel.grid =element_blank())
all_anova <- ezANOVA(raw, dv=rt, wid=sub,
within=.(dist_cond, tar_cond))
s_rt_tar_pos_all <- filter(raw, !outlier, correct) %>% group_by(dist_cond, tar_cond, sub) %>%
summarize(rt=mean(rt)) %>% arrange(dist_cond, tar_cond, sub)
str(s_rt_tar_pos_all)
ss_rt_tar_pos_all <- summarize(s_rt_tar_pos_all,mRT=mean(rt), seRT=sd(rt)/sqrt(N-1))
str(ss_rt_tar_pos_all)
ggplot(ss_rt_tar_pos_all, aes(x=dist_cond, y=mRT, fill=tar_cond)) +
geom_bar(stat="identity", width=0.6, color="black", position = "dodge") + theme_bw() +
geom_errorbar(aes(ymin=mRT-seRT, ymax=mRT+seRT), width=0.2, position=position_dodge(0.6)) + coord_cartesian(ylim=c(0.7,1.3))+
xlab("Distractor condition") + ylab("Response time (ms)") +
geom_text(mapping = aes(label = 1000*round(mRT,3)), size = 3, colour = 'black', vjust = 8, hjust = 0.5, position = position_dodge(0.6)) + theme(panel.grid =element_blank())
s_rt_tpos_data <- filter(raw, !outlier, correct, dist_pos==0) %>% group_by(tar_cond, sub) %>%
summarize(rt=mean(rt)) %>% arrange(sub, tar_cond)
ss_rt_tpos_data <- summarize(s_rt_tpos_data, mRT=mean(rt), seRT=sd(rt)/sqrt(N-1))
ggplot(ss_rt_tpos_data, aes(x=tar_cond, y=mRT)) +
geom_bar(stat="identity", width=0.6, color="black", fill="forestgreen") + theme_bw() +
geom_errorbar(aes(ymin=mRT-seRT, ymax=mRT+seRT), width=0.2) + coord_cartesian(ylim=c(0.7,1.2))+
xlab("Target location") + ylab("Response time (ms)") +
geom_text(mapping = aes(label = 1000*round(mRT,3)), size = 3, colour = 'black', vjust =8, hjust = 0.5, position = position_dodge(0.6)) + theme(panel.grid =element_blank())
# t-test to check for significant difference between RTs with target in high an low prob locations
target_pos_rt_ttest <- t.test(filter(s_rt_tpos_data, tar_cond=="High")$rt,
filter(s_rt_tpos_data, tar_cond=="Low")$rt, paired=TRUE)
str(target_pos_rt_ttest)
raw_pdistpos <- group_by(raw, sub, blkNo) %>%
mutate(pdist_pos = lag(dist_pos), tposmatch = tar_pos==pdist_pos) %>%
filter(tposmatch, dist_pos==0)
# Check number of trials that this analysis is based on
n_trials_pdist_pos <- filter(raw_pdistpos, correct, !outlier) %>%
group_by(sub, tar_cond) %>% summarize(ntrials=n())
ggplot(n_trials_pdist_pos, aes(x=sub, y=ntrials, fill=tar_cond)) +
geom_bar(stat="identity", width=0.6, color="black", position="dodge") + theme_bw()
# Calculate mean RT for target in high and low probability locations with distractor absent
# compare to Figure 3 (left half) in Wang & Theeuwes,
s_rt_tpos_pdp_data <- filter(raw_pdistpos, !outlier, correct, dist_pos==0) %>% group_by(tar_cond, sub) %>%
summarize(rt=mean(rt)) %>% arrange(sub, tar_cond)
ss_rt_tpos_pdp_data <- summarize(s_rt_tpos_pdp_data, mRT=mean(rt), seRT=sd(rt)/sqrt(N-1))
ggplot(ss_rt_tpos_pdp_data, aes(x=tar_cond, y=mRT)) +
geom_bar(stat="identity", width=0.6, color="black", fill="forestgreen") + theme_bw() +
geom_errorbar(aes(ymin=mRT-seRT, ymax=mRT+seRT), width=0.2) + coord_cartesian(ylim=c(0.8,1.2)) +
xlab("Target location") + ylab("Response time (ms)") +
geom_text(mapping = aes(label = 1000*round(mRT,3)), size = 3, colour = 'black', vjust =8, hjust = 0.5, position = position_dodge(0.6)) + theme(panel.grid =element_blank())
# t-test to check for significant difference between RTs with target in high an low prob locations
target_pos_rt_pdp_ttest <- t.test(filter(s_rt_tpos_pdp_data, tar_cond=="High")$rt,
filter(s_rt_tpos_pdp_data, tar_cond=="Low")$rt, paired=TRUE)
str(target_pos_rt_pdp_ttest)
raw_pdistpos <- group_by(raw, sub, blkNo) %>%
mutate(pdist_pos = lag(dist_pos), tposmatch = tar_pos==pdist_pos) %>%
filter(tposmatch, dist_pos==0)
# Check number of trials that this analysis is based on
n_trials_pdist_pos <- filter(raw_pdistpos, correct, !outlier) %>%
group_by(sub, tar_cond) %>% summarize(ntrials=n())
ggplot(n_trials_pdist_pos, aes(x=sub, y=ntrials, fill=tar_cond)) +
geom_bar(stat="identity", width=0.6, color="black", position="dodge") + theme_bw()
# Calculate mean RT for target in high and low probability locations with distractor absent
# compare to Figure 3 (left half) in Wang & Theeuwes,
s_rt_tpos_pdp_data <- filter(raw_pdistpos, !outlier, correct, dist_pos==0) %>% group_by(tar_cond, sub) %>%
summarize(rt=mean(rt)) %>% arrange(sub, tar_cond)
ss_rt_tpos_pdp_data <- summarize(s_rt_tpos_pdp_data, mRT=mean(rt), seRT=sd(rt)/sqrt(N-1))
ggplot(ss_rt_tpos_pdp_data, aes(x=tar_cond, y=mRT)) +
geom_bar(stat="identity", width=0.6, color="black", fill="forestgreen") + theme_bw() +
geom_errorbar(aes(ymin=mRT-seRT, ymax=mRT+seRT), width=0.2) + coord_cartesian(ylim=c(0.6,1.2)) +
xlab("Target location") + ylab("Response time (ms)") +
geom_text(mapping = aes(label = 1000*round(mRT,3)), size = 3, colour = 'black', vjust =8, hjust = 0.5, position = position_dodge(0.6)) + theme(panel.grid =element_blank())
# t-test to check for significant difference between RTs with target in high an low prob locations
target_pos_rt_pdp_ttest <- t.test(filter(s_rt_tpos_pdp_data, tar_cond=="High")$rt,
filter(s_rt_tpos_pdp_data, tar_cond=="Low")$rt, paired=TRUE)
str(target_pos_rt_pdp_ttest)
raw_npdistpos <- group_by(raw, sub, blkNo) %>%
mutate(pdist_pos = lag(dist_pos), tposmatch = tar_pos==pdist_pos) %>%
filter(!tposmatch, dist_pos==0)
# Check number of trials that this analysis is based on
n_trials_npdist_pos <- filter(raw_npdistpos, correct, !outlier) %>%
group_by(sub, tar_cond) %>% summarize(ntrials=n())
ggplot(n_trials_npdist_pos, aes(x=sub, y=ntrials, fill=tar_cond)) +
geom_bar(stat="identity", width=0.6, color="black", position="dodge") + theme_bw()
# Calculate mean RT for target in high and low probability locations with distractor absent
# compare to Figure 3 (left half) in Wang & Theeuwes,
s_rt_tpos_npdp_data <- filter(raw_npdistpos, !outlier, correct, dist_pos==0) %>% group_by(tar_cond, sub) %>%
summarize(rt=mean(rt)) %>% arrange(sub, tar_cond)
ss_rt_tpos_npdp_data <- summarize(s_rt_tpos_npdp_data, mRT=mean(rt), seRT=sd(rt)/sqrt(N-1))
ggplot(ss_rt_tpos_npdp_data, aes(x=tar_cond, y=mRT)) +
geom_bar(stat="identity", width=0.6, color="black", fill="forestgreen") + theme_bw() +
geom_errorbar(aes(ymin=mRT-seRT, ymax=mRT+seRT), width=0.2) + coord_cartesian(ylim=c(0.7,1.2))+
xlab("Target location") + ylab("Response time (ms)") +
geom_text(mapping = aes(label = 1000*round(mRT,3)), size = 3, colour = 'black', vjust =8, hjust = 0.5, position = position_dodge(0.6)) + theme(panel.grid =element_blank())
# t-test to check for significant difference between RTs with target in high an low prob locations
target_pos_rt_npdp_ttest <- t.test(filter(s_rt_tpos_npdp_data, tar_cond=="High")$rt,
filter(s_rt_tpos_npdp_data, tar_cond=="Low")$rt, paired=TRUE)
str(target_pos_rt_npdp_ttest )
raw_npdistpos <- group_by(raw, sub, blkNo) %>%
mutate(pdist_pos = lag(dist_pos), tposmatch = tar_pos==pdist_pos) %>%
filter(!tposmatch, dist_pos==0)
# Check number of trials that this analysis is based on
n_trials_npdist_pos <- filter(raw_npdistpos, correct, !outlier) %>%
group_by(sub, tar_cond) %>% summarize(ntrials=n())
ggplot(n_trials_npdist_pos, aes(x=sub, y=ntrials, fill=tar_cond)) +
geom_bar(stat="identity", width=0.6, color="black", position="dodge") + theme_bw()
# Calculate mean RT for target in high and low probability locations with distractor absent
# compare to Figure 3 (left half) in Wang & Theeuwes,
s_rt_tpos_npdp_data <- filter(raw_npdistpos, !outlier, correct, dist_pos==0) %>% group_by(tar_cond, sub) %>%
summarize(rt=mean(rt)) %>% arrange(sub, tar_cond)
ss_rt_tpos_npdp_data <- summarize(s_rt_tpos_npdp_data, mRT=mean(rt), seRT=sd(rt)/sqrt(N-1))
ggplot(ss_rt_tpos_npdp_data, aes(x=tar_cond, y=mRT)) +
geom_bar(stat="identity", width=0.6, color="black", fill="forestgreen") + theme_bw() +
geom_errorbar(aes(ymin=mRT-seRT, ymax=mRT+seRT), width=0.2) + coord_cartesian(ylim=c(0.6,1.2))+
xlab("Target location") + ylab("Response time (ms)") +
geom_text(mapping = aes(label = 1000*round(mRT,3)), size = 3, colour = 'black', vjust =8, hjust = 0.5, position = position_dodge(0.6)) + theme(panel.grid =element_blank())
# t-test to check for significant difference between RTs with target in high an low prob locations
target_pos_rt_npdp_ttest <- t.test(filter(s_rt_tpos_npdp_data, tar_cond=="High")$rt,
filter(s_rt_tpos_npdp_data, tar_cond=="Low")$rt, paired=TRUE)
str(target_pos_rt_npdp_ttest )
# Calculate mean error rate for
raw_npdist <- group_by(raw, sub, blkNo) %>%
mutate(pdist_pos = lag(dist_pos)) %>% filter(pdist_pos==0, dist_pos==0)
# Check number of trials that this analysis is based on
n_trials_npdist <- filter(raw_npdist, correct, !outlier) %>%
group_by(sub, tar_cond) %>% summarize(ntrials=n())
ggplot(n_trials_npdist, aes(x=sub, y=ntrials, fill=tar_cond)) +
geom_bar(stat="identity", width=0.6, color="black", position="dodge") + theme_bw()
# Calculate mean RT for target in high and low probability locations with distractor absent
# compare to Figure 3 (left half) in Wang & Theeuwes,
s_rt_tpos_npd_data <- filter(raw_npdist, !outlier, correct, dist_pos==0) %>% group_by(tar_cond, sub) %>%
summarize(rt=mean(rt)) %>% arrange(sub, tar_cond)
ss_rt_tpos_npd_data <- summarize(s_rt_tpos_npd_data, mRT=mean(rt), seRT=sd(rt)/sqrt(N-1))
ggplot(ss_rt_tpos_npd_data, aes(x=tar_cond, y=mRT)) +
geom_bar(stat="identity", width=0.6, color="black", fill="forestgreen") + theme_bw() +
geom_errorbar(aes(ymin=mRT-seRT, ymax=mRT+seRT), width=0.2) + coord_cartesian(ylim=c(0.7,1.2))+
xlab("Target location") + ylab("Response time (ms)") +
geom_text(mapping = aes(label = 1000*round(mRT,3)), size = 3, colour = 'black', vjust =8, hjust = 0.5, position = position_dodge(0.6)) + theme(panel.grid =element_blank())
# t-test to check for significant difference between RTs with target in high an low prob locations
target_pos_rt_npd_ttest <- t.test(filter(s_rt_tpos_npd_data, tar_cond=="High")$rt,
filter(s_rt_tpos_npd_data, tar_cond=="Low")$rt, paired=TRUE)
str(target_pos_rt_npd_ttest)
raw_npdist <- group_by(raw, sub, blkNo) %>%
mutate(pdist_pos = lag(dist_pos)) %>% filter(pdist_pos==0, dist_pos==0)
# Check number of trials that this analysis is based on
n_trials_npdist <- filter(raw_npdist, correct, !outlier) %>%
group_by(sub, tar_cond) %>% summarize(ntrials=n())
ggplot(n_trials_npdist, aes(x=sub, y=ntrials, fill=tar_cond)) +
geom_bar(stat="identity", width=0.6, color="black", position="dodge") + theme_bw()
# Calculate mean RT for target in high and low probability locations with distractor absent
# compare to Figure 3 (left half) in Wang & Theeuwes,
s_rt_tpos_npd_data <- filter(raw_npdist, !outlier, correct, dist_pos==0) %>% group_by(tar_cond, sub) %>%
summarize(rt=mean(rt)) %>% arrange(sub, tar_cond)
ss_rt_tpos_npd_data <- summarize(s_rt_tpos_npd_data, mRT=mean(rt), seRT=sd(rt)/sqrt(N-1))
ggplot(ss_rt_tpos_npd_data, aes(x=tar_cond, y=mRT)) +
geom_bar(stat="identity", width=0.6, color="black", fill="forestgreen") + theme_bw() +
geom_errorbar(aes(ymin=mRT-seRT, ymax=mRT+seRT), width=0.2) + coord_cartesian(ylim=c(0.6,1.2))+
xlab("Target location") + ylab("Response time (ms)") +
geom_text(mapping = aes(label = 1000*round(mRT,3)), size = 3, colour = 'black', vjust =8, hjust = 0.5, position = position_dodge(0.6)) + theme(panel.grid =element_blank())
# t-test to check for significant difference between RTs with target in high an low prob locations
target_pos_rt_npd_ttest <- t.test(filter(s_rt_tpos_npd_data, tar_cond=="High")$rt,
filter(s_rt_tpos_npd_data, tar_cond=="Low")$rt, paired=TRUE)
str(target_pos_rt_npd_ttest)
raw_dipdist <- group_by(raw, sub, blkNo) %>%
mutate(pdist_pos = lag(dist_pos), tposmatch = tar_pos==pdist_pos) %>%
filter(!tposmatch, !pdist_pos==0, dist_pos==0)
# Check number of trials that this analysis is based on
n_trials_dipdist <- filter(raw_dipdist, correct, !outlier) %>%
group_by(sub, tar_cond) %>% summarize(ntrials=n())
ggplot(n_trials_npdist, aes(x=sub, y=ntrials, fill=tar_cond)) +
geom_bar(stat="identity", width=0.6, color="black", position="dodge") + theme_bw()
# Calculate mean RT for target in high and low probability locations with distractor absent
# compare to Figure 3 (left half) in Wang & Theeuwes,
s_rt_tpos_dipd_data <- filter(raw_dipdist, !outlier, correct, dist_pos==0) %>% group_by(tar_cond, sub) %>%
summarize(rt=mean(rt)) %>% arrange(sub, tar_cond)
ss_rt_tpos_dipd_data <- summarize(s_rt_tpos_dipd_data, mRT=mean(rt), seRT=sd(rt)/sqrt(N-1))
ggplot(ss_rt_tpos_dipd_data, aes(x=tar_cond, y=mRT)) +
geom_bar(stat="identity", width=0.6, color="black", fill="forestgreen") + theme_bw() +
geom_errorbar(aes(ymin=mRT-seRT, ymax=mRT+seRT), width=0.2) + coord_cartesian(ylim=c(0.7,1.2))+
xlab("Target location") + ylab("Response time (ms)") +
geom_text(mapping = aes(label = 1000*round(mRT,3)), size = 3, colour = 'black', vjust =8, hjust = 0.5, position = position_dodge(0.6)) + theme(panel.grid =element_blank())
# t-test to check for significant difference between RTs with target in high an low prob locations
target_pos_rt_dipd_ttest <- t.test(filter(s_rt_tpos_dipd_data, tar_cond=="High")$rt,
filter(s_rt_tpos_dipd_data, tar_cond=="Low")$rt, paired=TRUE)
str(target_pos_rt_dipd_ttest )
raw_dipdist <- group_by(raw, sub, blkNo) %>%
mutate(pdist_pos = lag(dist_pos), tposmatch = tar_pos==pdist_pos) %>%
filter(!tposmatch, !pdist_pos==0, dist_pos==0)
# Check number of trials that this analysis is based on
n_trials_dipdist <- filter(raw_dipdist, correct, !outlier) %>%
group_by(sub, tar_cond) %>% summarize(ntrials=n())
ggplot(n_trials_npdist, aes(x=sub, y=ntrials, fill=tar_cond)) +
geom_bar(stat="identity", width=0.6, color="black", position="dodge") + theme_bw()
# Calculate mean RT for target in high and low probability locations with distractor absent
# compare to Figure 3 (left half) in Wang & Theeuwes,
s_rt_tpos_dipd_data <- filter(raw_dipdist, !outlier, correct, dist_pos==0) %>% group_by(tar_cond, sub) %>%
summarize(rt=mean(rt)) %>% arrange(sub, tar_cond)
ss_rt_tpos_dipd_data <- summarize(s_rt_tpos_dipd_data, mRT=mean(rt), seRT=sd(rt)/sqrt(N-1))
ggplot(ss_rt_tpos_dipd_data, aes(x=tar_cond, y=mRT)) +
geom_bar(stat="identity", width=0.6, color="black", fill="forestgreen") + theme_bw() +
geom_errorbar(aes(ymin=mRT-seRT, ymax=mRT+seRT), width=0.2) + coord_cartesian(ylim=c(0.6,1.2))+
xlab("Target location") + ylab("Response time (ms)") +
geom_text(mapping = aes(label = 1000*round(mRT,3)), size = 3, colour = 'black', vjust =8, hjust = 0.5, position = position_dodge(0.6)) + theme(panel.grid =element_blank())
# t-test to check for significant difference between RTs with target in high an low prob locations
target_pos_rt_dipd_ttest <- t.test(filter(s_rt_tpos_dipd_data, tar_cond=="High")$rt,
filter(s_rt_tpos_dipd_data, tar_cond=="Low")$rt, paired=TRUE)
str(target_pos_rt_dipd_ttest )
str(head(target_pos_rt_ttest))
str(head(target_pos_rt_pdp_ttest))
str(head(target_pos_rt_npdp_ttest))
str(head(target_pos_rt_npd_ttest))
str(head(target_pos_rt_dipd_ttest))
raw_inter <- group_by(raw, sub, blkNo) %>%
mutate(pdist_pos = lag(dist_pos), ptar_pos = lag(tar_pos), tposmatch = tar_pos==pdist_pos,
pposmatch = dist_pos==ptar_pos, sposmatch = dist_pos==pdist_pos) %>%
filter(tposmatch | pposmatch  | sposmatch)
n_trials_raw_exlude <- raw_inter %>% group_by(sub,tar_cond) %>% summarize(ntrials=n())
ggplot(n_trials_raw_exlude, aes(x=sub, y=ntrials, fill=tar_cond)) +
geom_bar(stat="identity", width=0.6, color="black", position="dodge") + theme_bw()
# exlude the trials and check the rest of trials
raw_exclude <- group_by(raw, sub, blkNo) %>%
mutate(pdist_pos = lag(dist_pos), ptar_pos = lag(tar_pos), tposmatch = tar_pos==pdist_pos,
pposmatch = dist_pos==ptar_pos, sposmatch = dist_pos==pdist_pos) %>%
filter(!(tposmatch | pposmatch  | sposmatch))
n_trials_raw_rest <- filter(raw_exclude, correct, !outlier) %>%
group_by(sub, tar_cond) %>% summarize(ntrials=n())
ggplot(n_trials_raw_rest, aes(x=sub, y=ntrials, fill=tar_cond)) +
geom_bar(stat="identity", width=0.6, color="black", position="dodge") + theme_bw()
# ---- distractor_target_distance ----
# This section examines the effect of target to distractor distance. Obviously this includes only distractor present trials.
# calculate the distance of target and distractor and compare with two target conditions
distance <- c(1, 2, 3, 4, 3, 2, 1)
s_tar_dist_distance_data <- mutate(raw, tar_dist_distance = distance[abs(tar_pos - dist_pos)]) %>%
group_by(tar_dist_distance, tar_cond, sub) %>% filter(correct, !outlier, dist_pos!=0) %>% summarize(rt=mean(rt))
str(head(s_tar_dist_distance_data))
ss_tar_dist_distance_data <- summarize(s_tar_dist_distance_data, mRT=mean(rt), seRT=sd(rt)/sqrt(N-1))
ggplot(ss_tar_dist_distance_data, aes(x=tar_dist_distance, y=mRT, color=tar_cond)) +
geom_point(stat="identity") + theme_bw() + coord_cartesian(yli=c(0.7,1.3)) +
geom_smooth()+  geom_text(mapping = aes(label = 1000*round(mRT,3)), size = 3, colour = 'black', vjust = 2, hjust = 0.5, position = position_dodge(0.6)) + theme(panel.grid =element_blank()) +
labs(x="Distance between target and distractor", y='mean RT (s)')
tar_dist_distance_rt_anova <- ezANOVA(s_tar_dist_distance_data, dv=rt, wid=sub,
within=.(tar_dist_distance, tar_cond))
str(tar_dist_distance_rt_anova)
# exlude the distance trials and check the rest of trials
distance <- c(1, 2, 3, 4, 3, 2, 1)
raw_exclude$tar_dist_distance <- distance[abs(raw_exclude$tar_pos - raw_exclude$dist_pos)]
ntrials_distance <- raw_exclude %>%  group_by(tar_dist_distance, tar_cond) %>% summarise(ntrials=n()) %>%
arrange(tar_dist_distance, tar_cond)
raw_exclude2 <- filter(raw_exclude, !(tar_dist_distance == 4 & !dist_pos==0))
n_trials_raw_rest <- filter(raw_exclude2, correct, !outlier) %>%
group_by(sub, tar_cond) %>% summarize(ntrials=n())
ggplot(n_trials_raw_rest, aes(x=sub, y=ntrials, fill=tar_cond)) +
geom_bar(stat="identity", width=0.6, color="black", position="dodge") + theme_bw()
# ---- tar_low_pdist_low_vs_high ----
# Check whether for distractor absent trials with target in low probability region, there is a difference
# in RT between the case where previous distractor is in high prob. region and in low prob. region, assuming
# distractor is not on target position
s_rt_pdist_tlow <- group_by(raw, sub, blkNo) %>%
mutate(pdist_pos = lag(dist_pos), pdist_cond = lag(dist_cond), tposmatch = tar_pos==pdist_pos) %>%
ungroup() %>% filter(!tposmatch, dist_pos==0, tar_cond=="Low", pdist_pos!=0,
!is.na(pdist_cond), correct, !outlier) %>% group_by(pdist_cond, sub) %>%
summarize(rt=mean(rt))
ss_rt_pdist_tlow <- summarize(s_rt_pdist_tlow, mrt=mean(rt), se_rt=sd(rt)/sqrt(N-1))
rt_pdist_tlow_ttest <- t.test(filter(s_rt_pdist_tlow, pdist_cond=="Low")$rt,
filter(s_rt_pdist_tlow, pdist_cond=="High")$rt, paired=TRUE)
# ---- target_pos in all conditions----
s_rt_tar_pos_all2 <- filter(raw_exclude2, !outlier, correct) %>% group_by(dist_cond, tar_cond, sub) %>%
summarize(rt=mean(rt)) %>% arrange(dist_cond, tar_cond, sub)
str(s_rt_tar_pos_all2)
ss_rt_tar_pos_all2 <- summarize(s_rt_tar_pos_all2,mRT=mean(rt), seRT=sd(rt)/sqrt(N-1))
str(ss_rt_tar_pos_all2)
ggplot(ss_rt_tar_pos_all2, aes(x=dist_cond, y=mRT, fill=tar_cond)) +
geom_bar(stat="identity", width=0.6, color="black", position = "dodge") + theme_bw() +
geom_errorbar(aes(ymin=mRT-seRT, ymax=mRT+seRT), width=0.2, position=position_dodge(0.6)) + coord_cartesian(ylim=c(0.7,1.3))+
xlab("Distractor condition") + ylab("Response time (ms)") +
geom_text(mapping = aes(label = 1000*round(mRT,3)), size = 3, colour = 'black', vjust = 8, hjust = 0.5, position = position_dodge(0.6)) + theme(panel.grid =element_blank())
all_anova <- ezANOVA(raw, dv=rt, wid=sub,
within=.(dist_cond, tar_cond))
s_rt_tar_pos_all2 <- filter(raw_exclude2, !outlier, correct) %>% group_by(dist_cond, tar_cond, sub) %>%
summarize(rt=mean(rt)) %>% arrange(dist_cond, tar_cond, sub)
str(s_rt_tar_pos_all2)
ss_rt_tar_pos_all2 <- summarize(s_rt_tar_pos_all2,mRT=mean(rt), seRT=sd(rt)/sqrt(N-1))
str(ss_rt_tar_pos_all2)
ggplot(ss_rt_tar_pos_all2, aes(x=dist_cond, y=mRT, fill=tar_cond)) +
geom_bar(stat="identity", width=0.6, color="black", position = "dodge") + theme_bw() +
geom_errorbar(aes(ymin=mRT-seRT, ymax=mRT+seRT), width=0.2, position=position_dodge(0.6)) + coord_cartesian(ylim=c(0.6,1.3))+
xlab("Distractor condition") + ylab("Response time (ms)") +
geom_text(mapping = aes(label = 1000*round(mRT,3)), size = 3, colour = 'black', vjust = 8, hjust = 0.5, position = position_dodge(0.6)) + theme(panel.grid =element_blank())
all_anova <- ezANOVA(raw, dv=rt, wid=sub,
within=.(dist_cond, tar_cond))
